/*
 * SPDX-License-Identifier: Apache-2.0
 */

'use strict';

const { Contract } = require('fabric-contract-api');

class CardioGene extends Contract {

    async initLedger(ctx) {
        console.info('============= START : Initialize Ledger ===========');
        const patients = [
            {
                name: 'Bob Ross',
                dob: '10/10/45',
                height: '70 (inches)',
                weight: '185 (lbs)',
                rs2493296:	'0|0',
                rs12731208:	'0|0',
                rs6670508:	'0|1',
                rs880315:	'0|1',
                rs56153133:	'1|0',
                rs28711771:	'0|0',
                rs6686889:	'0|1',
                rs448385:	'0|0',
                rs71636784:	'0|1',
                rs12758407:	'0|0',
                rs11591147:	'0|0',
                rs1149643:	'0|0',
                rs61772626:	'0|0',
                rs4350231:	'0|0',
                rs2613498:	'1|0',
                rs6679817:	'1|0',
                rs12740374:	'0|0',
                rs3790604:	'1|1',
                rs59980837:	'0|0',
                rs35479618:	'0|0',
                rs6684311:	'0|0',
                rs10911021:	'0|1',
                rs16835282:	'1|0',
                rs2820290:	'1|0',
                rs4077408:	'0|1',
                rs2760061:	'0|1',
                rs943580:	'0|0',
                rs6683021:	'1|1',
                rs113898337:	'0|0',
                rs1367117:	'0|0',
                rs312053:	'1|0',
                rs188315257:	'0|0',
                rs1275988:	'0|0',
                rs780093:	'1|1',
                rs67385572:	'1|0',
                rs115262049:	'0|1',
                rs3764769:	'1|0',
                rs4299376:	'0|0',
                rs687914:	'1|1',
                rs6731302:	'0|0',
                rs1186699:	'1|1',
                rs1009358:	'0|1',
                rs3937593:	'1|0',
                rs11688682:	'1|1',
                rs55873205:	'0|0',
                rs13021222:	'0|0',
                rs2271543:	'1|0',
                rs78058190:	'1|0',
                rs2943652:	'0|0',
                rs3768939:	'0|1',
                rs6781726:	'0|0',
                rs2131570:	'0|1',
                rs2643826:	'0|1',
                rs6800730:	'1|0',
                rs3821843:	'1|1',
                rs6445597:	'0|1',
                rs11130381:	'0|0',
                rs11709060:	'1|0',
                rs4682671:	'0|0',
                rs1154988:	'1|0',
                rs9818870:	'1|0',
                rs9844972:	'0|0',
                rs6441207:	'0|0',
                rs75943566:	'0|0',
                rs78307470:	'1|0',
                rs2421648:	'0|0',
                rs6770911:	'0|0',
                rs35315125:	'1|1',
                rs13108218:	'0|0',
                rs9291634:	'1|1',
                rs58854324:	'1|0',
                rs1826063:	'0|0',
                rs6819003:	'0|0',
                rs13125101:	'0|1',
                rs35895091:	'0|0',
                rs7694531:	'1|1',
                rs1229984:	'1|1',
                rs13127398:	'1|1',
                rs7681002:	'0|0',
                rs56388530:	'1|1',
                rs7685862:	'1|1',
                rs9330353:	'1|1',
                rs893929:	'1|0',
                rs6536076:	'1|1',
                rs11724647:	'1|1',
                rs4975709:	'0|0',
                rs34681481:	'0|0',
                rs2859814:	'0|0',
                rs10059884:	'0|1',
                rs4865796:	'1|1',
                rs13179413:	'0|0',
                rs271695:	'1|0',
                rs7721613:	'0|0',
                rs9291932:	'1|0',
                rs12916:	'0|0',
                rs10942863:	'1|0',
                rs10042590:	'1|0',
                rs35134:	'0|0',
                rs7736264:	'1|1',
                rs74661587:	'0|0',
                rs17677603:	'1|0',
                rs7719499:	'1|1',
                rs72801474:	'0|0',
                rs4704825:	'1|0',
                rs2962383:	'1|1',
                rs150532297:	'1|0',
                rs7701003:	'0|0',
                rs13358657:	'1|1',
                rs36071027:	'0|0',
                rs72810955:	'1|0',
                rs13190036:	'0|0',
                rs2569882:	'1|0',
                rs499818:	'0|0',
                rs9368222:	'0|0',
                rs2294214:	'0|0',
                rs2744132:	'0|0',
                rs7751419:	'0|0',
                rs2143678:	'0|0',
                rs7763350:	'0|1',
                rs6905288:	'0|0',
                rs1845034:	'1|1',
                rs1581717:	'0|0',
                rs1507151:	'1|0',
                rs13210511:	'1|0',
                rs2105092:	'1|1',
                rs9321485:	'0|0',
                rs607342:	'0|1',
                rs62430713:	'1|1',
                rs62434109:	'0|1',
                rs10872673:	'0|0',
                rs140570886:	'0|1',
                rs2934849:	'0|0',
                rs73033340:	'0|0',
                rs11770148:	'0|0',
                rs2969037:	'0|0',
                rs11771259:	'1|1',
                rs3735533:	'0|0',
                rs11767188:	'1|1',
                rs17725246:	'1|1',
                rs7794284:	'0|1',
                rs740047:	'0|0',
                rs17477177:	'1|0',
                rs983521:	'0|0',
                rs11556924:	'0|0',
                rs6974288:	'0|1',
                rs782520:	'0|1',
                rs28656273:	'1|1',
                rs3918226:	'0|0',
                rs10224210:	'0|1',
                rs78299715:	'0|1',
                rs73563812:	'0|0',
                rs10107066:	'1|0',
                rs1800389:	'0|0',
                rs1030431:	'1|1',
                rs2977324:	'1|1',
                rs13265769:	'1|1',
                rs2011567:	'0|0',
                rs1074703:	'0|1',
                rs35783704:	'0|1',
                rs28601761:	'0|0',
                rs7841408:	'1|0',
                rs11781816:	'1|0',
                rs1048070:	'1|1',
                rs67906804:	'1|1',
                rs76452347:	'0|0',
                rs13285624:	'0|0',
                rs10816914:	'0|0',
                rs76038906:	'0|0',
                rs6271:	'0|0',
                rs10740995:	'1|0',
                rs12258967:	'1|1',
                rs1962094:	'0|1',
                rs7099692:	'0|1',
                rs4948550:	'1|0',
                rs72831343:	'1|0',
                rs10821967:	'0|0',
                rs2236295:	'1|0',
                rs10824134:	'0|0',
                rs2114820:	'1|0',
                rs10882397:	'0|1',
                rs10786156:	'0|1',
                rs943346:	'0|0',
                rs603424:	'1|1',
                rs10748798:	'0|0',
                rs11191580:	'0|1',
                rs145158522:	'0|0',
                rs2855469:	'0|0',
                rs1801253:	'1|0',
                rs12358504:	'1|1',
                rs75523587:	'0|1',
                rs612652:	'0|0',
                rs415895:	'0|1',
                rs11605518:	'1|1',
                rs10832571:	'1|1',
                rs963837:	'0|0',
                rs3809060:	'0|1',
                rs35521277:	'1|0',
                rs10769254:	'0|0',
                rs11601694:	'0|1',
                rs74966104:	'0|0',
                rs11229555:	'0|0',
                rs7125196:	'0|1',
                rs11231711:	'0|0',
                rs3850946:	'0|0',
                rs557675:	'0|0',
                rs67330701:	'1|0',
                rs1155311:	'0|0',
                rs604723:	'0|1',
                rs2513993:	'1|1',
                rs4754196:	'0|0',
                rs12363917:	'1|1',
                rs12280753:	'0|0',
                rs964184:	'0|0',
                rs1047964:	'1|1',
                rs7121446:	'0|0',
                rs7129204:	'1|0',
                rs76895963:	'0|0',
                rs72656645:	'0|0',
                rs2078339:	'0|1',
                rs73073694:	'0|0',
                rs11048457:	'0|0',
                rs117913411:	'1|1',
                rs17122812:	'0|0',
                rs17123349:	'0|0',
                rs4883482:	'1|0',
                rs7134677:	'0|1',
                rs315145:	'0|0',
                rs2681492:	'1|0',
                rs9634314:	'1|0',
                rs3184504:	'0|0',
                rs10850407:	'0|1',
                rs35429:	'0|0',
                rs2255531:	'1|0',
                rs10849891:	'0|0',
                rs75588192:	'1|1',
                rs36174733:	'0|0',
                rs9506725:	'0|0',
                rs9317097:	'1|0',
                rs3803266:	'1|1',
                rs9603502:	'0|1',
                rs112684153:	'0|0',
                rs1239948:	'0|0',
                rs675605:	'0|0',
                rs9549328:	'1|0',
                rs41284486:	'0|0',
                rs3752105:	'0|0',
                rs696:	'0|0',
                rs72681869:	'1|0',
                rs2356455:	'0|0',
                rs221907:	'1|1',
                rs2246490:	'1|1',
                rs12324159:	'1|1',
                rs747780:	'0|0',
                rs4775373:	'0|1',
                rs1440371:	'1|1',
                rs7173826:	'0|1',
                rs117539635:	'0|0',
                rs11072508:	'0|0',
                rs2627308:	'1|1',
                rs1894400:	'0|0',
                rs12928131:	'0|0',
                rs139491786:	'0|1',
                rs138922864:	'0|0',
                rs11647570:	'0|1',
                rs10500326:	'0|1',
                rs77924615:	'0|0',
                rs9972727:	'1|0',
                rs142076278:	'0|1',
                rs7187250:	'0|0',
                rs75086474:	'1|0',
                rs62052820:	'0|0',
                rs34042070:	'1|0',
                rs766522:	'0|0',
                rs12930850:	'1|1',
                rs2460448:	'1|0',
                rs74439044:	'0|0',
                rs58713975:	'0|0',
                rs2872812:	'1|0',
                rs2301597:	'1|0',
                rs17608766:	'1|0',
                rs1912483:	'0|0',
                rs2288276:	'0|1',
                rs68085814:	'1|0',
                rs28412876:	'0|0',
                rs2680707:	'1|1',
                rs3785837:	'1|1',
                rs4277405:	'0|1',
                rs2290769:	'1|1',
                rs1436138:	'0|0',
                rs1044486:	'1|0',
                rs6565564:	'1|1',
                rs7232858:	'1|1',
                rs313021:	'0|0',
                rs2472610:	'1|0',
                rs1877312:	'0|1',
                rs72915163:	'1|1',
                rs113602013:	'0|0',
                rs8102879:	'1|0',
                rs12972366:	'0|0',
                rs12978472:	'1|0',
                rs4804517:	'0|0',
                rs10409243:	'0|0',
                rs61194703:	'0|1',
                rs74179972:	'0|0',
                rs167479:	'0|0',
                rs7246865:	'1|1',
                rs113230003:	'0|0',
                rs11880800:	'0|0',
                rs7412:	'1|1',
                rs516246:	'0|0',
                rs189349094:	'0|0',
                rs36037977:	'0|0',
                rs6039216:	'0|0',
                rs1887320:	'0|1',
                rs4911250:	'0|0',
                rs1883711:	'0|0',
                rs6031431:	'0|0',
                rs2208589:	'0|1',
                rs6021247:	'1|1',
                rs127430:	'1|0',
                rs7267618:	'1|1',
                rs1406961:	'0|1',
                rs2478981:	'1|1',
                rs8126001:	'0|1',
                rs2823139:	'0|0',
                rs12627514:	'0|1',
                rs4818833:	'0|0',
                rs174877:	'0|0',
                rs134557:	'1|1',
                rs7890572:	'1|1',

            },

        ];

        for (let i = 0; i < patients.length; i++) {
            patients[i].docType = 'patient';
            await ctx.stub.putState('PATIENT' + i, Buffer.from(JSON.stringify(patients[i])));
            console.info('Added <--> ', patients[i]);
        }
        console.info('============= END : Initialize Ledger ===========');
    }

    async queryPatient(ctx, patientNumber) {
        const patientAsBytes = await ctx.stub.getState(patientNumber); // get the patient from chaincode state
        if (!patientAsBytes || patientAsBytes.length === 0) {
            throw new Error(`${patientNumber} does not exist`);
        }
        console.log(patientAsBytes.toString());
        return patientAsBytes.toString();
    }

    async createPatient(ctx, patientNumber, name, dob, height, weight, rs2493296, rs12731208, rs6670508, rs880315, rs56153133, rs28711771, rs6686889, rs448385, rs71636784, rs12758407, rs11591147, rs1149643, rs61772626, rs4350231, rs2613498, rs6679817, rs12740374, rs3790604, rs59980837, rs35479618, rs6684311, rs10911021, rs16835282, rs2820290, rs4077408, rs2760061, rs943580, rs6683021, rs113898337, rs1367117, rs312053, rs188315257, rs1275988, rs780093, rs67385572, rs115262049, rs3764769, rs4299376, rs687914, rs6731302, rs1186699, rs1009358, rs3937593, rs11688682, rs55873205, rs13021222, rs2271543, rs78058190, rs2943652, rs3768939, rs6781726, rs2131570, rs2643826, rs6800730, rs3821843, rs6445597, rs11130381, rs11709060, rs4682671, rs1154988, rs9818870, rs9844972, rs6441207, rs75943566, rs78307470, rs2421648, rs6770911, rs35315125, rs13108218, rs9291634, rs58854324, rs1826063, rs6819003, rs13125101, rs35895091, rs7694531, rs1229984, rs13127398, rs7681002, rs56388530, rs7685862, rs9330353, rs893929, rs6536076, rs11724647, rs4975709, rs34681481, rs2859814, rs10059884, rs4865796, rs13179413, rs271695, rs7721613, rs9291932, rs12916, rs10942863, rs10042590, rs35134, rs7736264, rs74661587, rs17677603, rs7719499, rs72801474, rs4704825, rs2962383, rs150532297, rs7701003, rs13358657, rs36071027, rs72810955, rs13190036, rs2569882, rs499818, rs9368222, rs2294214, rs2744132, rs7751419, rs2143678, rs7763350, rs6905288, rs1845034, rs1581717, rs1507151, rs13210511, rs2105092, rs9321485, rs607342, rs62430713, rs62434109, rs10872673, rs140570886, rs2934849, rs73033340, rs11770148, rs2969037, rs11771259, rs3735533, rs11767188, rs17725246, rs7794284, rs740047, rs17477177, rs983521, rs11556924, rs6974288, rs782520, rs28656273, rs3918226, rs10224210, rs78299715, rs73563812, rs10107066, rs1800389, rs1030431, rs2977324, rs13265769, rs2011567, rs1074703, rs35783704, rs28601761, rs7841408, rs11781816, rs1048070, rs67906804, rs76452347, rs13285624, rs10816914, rs76038906, rs6271, rs10740995, rs12258967, rs1962094, rs7099692, rs4948550, rs72831343, rs10821967, rs2236295, rs10824134, rs2114820, rs10882397, rs10786156, rs943346, rs603424, rs10748798, rs11191580, rs145158522, rs2855469, rs1801253, rs12358504, rs75523587, rs612652, rs415895, rs11605518, rs10832571, rs963837, rs3809060, rs35521277, rs10769254, rs11601694, rs74966104, rs11229555, rs7125196, rs11231711, rs3850946, rs557675, rs67330701, rs1155311, rs604723, rs2513993, rs4754196, rs12363917, rs12280753, rs964184, rs1047964, rs7121446, rs7129204, rs76895963, rs72656645, rs2078339, rs73073694, rs11048457, rs117913411, rs17122812, rs17123349, rs4883482, rs7134677, rs315145, rs2681492, rs9634314, rs3184504, rs10850407, rs35429, rs2255531, rs10849891, rs75588192, rs36174733, rs9506725, rs9317097, rs3803266, rs9603502, rs112684153, rs1239948, rs675605, rs9549328, rs41284486, rs3752105, rs696, rs72681869, rs2356455, rs221907, rs2246490, rs12324159, rs747780, rs4775373, rs1440371, rs7173826, rs117539635, rs11072508, rs2627308, rs1894400, rs12928131, rs139491786, rs138922864, rs11647570, rs10500326, rs77924615, rs9972727, rs142076278, rs7187250, rs75086474, rs62052820, rs34042070, rs766522, rs12930850, rs2460448, rs74439044, rs58713975, rs2872812, rs2301597, rs17608766, rs1912483, rs2288276, rs68085814, rs28412876, rs2680707, rs3785837, rs4277405, rs2290769, rs1436138, rs1044486, rs6565564, rs7232858, rs313021, rs2472610, rs1877312, rs72915163, rs113602013, rs8102879, rs12972366, rs12978472, rs4804517, rs10409243, rs61194703, rs74179972, rs167479, rs7246865, rs113230003, rs11880800, rs7412, rs516246, rs189349094, rs36037977, rs6039216, rs1887320, rs4911250, rs1883711, rs6031431, rs2208589, rs6021247, rs127430, rs7267618, rs1406961, rs2478981, rs8126001, rs2823139, rs12627514, rs4818833, rs174877, rs134557, rs7890572) {
        console.info('============= START : Create Patient ===========');

        const patient = {
            name,
            docType: 'patient',
            dob,
            height,
            weight,
            rs2493296,
            rs12731208,
            rs6670508,
            rs880315,
            rs56153133,
            rs28711771,
            rs6686889,
            rs448385,
            rs71636784,
            rs12758407,
            rs11591147,
            rs1149643,
            rs61772626,
            rs4350231,
            rs2613498,
            rs6679817,
            rs12740374,
            rs3790604,
            rs59980837,
            rs35479618,
            rs6684311,
            rs10911021,
            rs16835282,
            rs2820290,
            rs4077408,
            rs2760061,
            rs943580,
            rs6683021,
            rs113898337,
            rs1367117,
            rs312053,
            rs188315257,
            rs1275988,
            rs780093,
            rs67385572,
            rs115262049,
            rs3764769,
            rs4299376,
            rs687914,
            rs6731302,
            rs1186699,
            rs1009358,
            rs3937593,
            rs11688682,
            rs55873205,
            rs13021222,
            rs2271543,
            rs78058190,
            rs2943652,
            rs3768939,
            rs6781726,
            rs2131570,
            rs2643826,
            rs6800730,
            rs3821843,
            rs6445597,
            rs11130381,
            rs11709060,
            rs4682671,
            rs1154988,
            rs9818870,
            rs9844972,
            rs6441207,
            rs75943566,
            rs78307470,
            rs2421648,
            rs6770911,
            rs35315125,
            rs13108218,
            rs9291634,
            rs58854324,
            rs1826063,
            rs6819003,
            rs13125101,
            rs35895091,
            rs7694531,
            rs1229984,
            rs13127398,
            rs7681002,
            rs56388530,
            rs7685862,
            rs9330353,
            rs893929,
            rs6536076,
            rs11724647,
            rs4975709,
            rs34681481,
            rs2859814,
            rs10059884,
            rs4865796,
            rs13179413,
            rs271695,
            rs7721613,
            rs9291932,
            rs12916,
            rs10942863,
            rs10042590,
            rs35134,
            rs7736264,
            rs74661587,
            rs17677603,
            rs7719499,
            rs72801474,
            rs4704825,
            rs2962383,
            rs150532297,
            rs7701003,
            rs13358657,
            rs36071027,
            rs72810955,
            rs13190036,
            rs2569882,
            rs499818,
            rs9368222,
            rs2294214,
            rs2744132,
            rs7751419,
            rs2143678,
            rs7763350,
            rs6905288,
            rs1845034,
            rs1581717,
            rs1507151,
            rs13210511,
            rs2105092,
            rs9321485,
            rs607342,
            rs62430713,
            rs62434109,
            rs10872673,
            rs140570886,
            rs2934849,
            rs73033340,
            rs11770148,
            rs2969037,
            rs11771259,
            rs3735533,
            rs11767188,
            rs17725246,
            rs7794284,
            rs740047,
            rs17477177,
            rs983521,
            rs11556924,
            rs6974288,
            rs782520,
            rs28656273,
            rs3918226,
            rs10224210,
            rs78299715,
            rs73563812,
            rs10107066,
            rs1800389,
            rs1030431,
            rs2977324,
            rs13265769,
            rs2011567,
            rs1074703,
            rs35783704,
            rs28601761,
            rs7841408,
            rs11781816,
            rs1048070,
            rs67906804,
            rs76452347,
            rs13285624,
            rs10816914,
            rs76038906,
            rs6271,
            rs10740995,
            rs12258967,
            rs1962094,
            rs7099692,
            rs4948550,
            rs72831343,
            rs10821967,
            rs2236295,
            rs10824134,
            rs2114820,
            rs10882397,
            rs10786156,
            rs943346,
            rs603424,
            rs10748798,
            rs11191580,
            rs145158522,
            rs2855469,
            rs1801253,
            rs12358504,
            rs75523587,
            rs612652,
            rs415895,
            rs11605518,
            rs10832571,
            rs963837,
            rs3809060,
            rs35521277,
            rs10769254,
            rs11601694,
            rs74966104,
            rs11229555,
            rs7125196,
            rs11231711,
            rs3850946,
            rs557675,
            rs67330701,
            rs1155311,
            rs604723,
            rs2513993,
            rs4754196,
            rs12363917,
            rs12280753,
            rs964184,
            rs1047964,
            rs7121446,
            rs7129204,
            rs76895963,
            rs72656645,
            rs2078339,
            rs73073694,
            rs11048457,
            rs117913411,
            rs17122812,
            rs17123349,
            rs4883482,
            rs7134677,
            rs315145,
            rs2681492,
            rs9634314,
            rs3184504,
            rs10850407,
            rs35429,
            rs2255531,
            rs10849891,
            rs75588192,
            rs36174733,
            rs9506725,
            rs9317097,
            rs3803266,
            rs9603502,
            rs112684153,
            rs1239948,
            rs675605,
            rs9549328,
            rs41284486,
            rs3752105,
            rs696,
            rs72681869,
            rs2356455,
            rs221907,
            rs2246490,
            rs12324159,
            rs747780,
            rs4775373,
            rs1440371,
            rs7173826,
            rs117539635,
            rs11072508,
            rs2627308,
            rs1894400,
            rs12928131,
            rs139491786,
            rs138922864,
            rs11647570,
            rs10500326,
            rs77924615,
            rs9972727,
            rs142076278,
            rs7187250,
            rs75086474,
            rs62052820,
            rs34042070,
            rs766522,
            rs12930850,
            rs2460448,
            rs74439044,
            rs58713975,
            rs2872812,
            rs2301597,
            rs17608766,
            rs1912483,
            rs2288276,
            rs68085814,
            rs28412876,
            rs2680707,
            rs3785837,
            rs4277405,
            rs2290769,
            rs1436138,
            rs1044486,
            rs6565564,
            rs7232858,
            rs313021,
            rs2472610,
            rs1877312,
            rs72915163,
            rs113602013,
            rs8102879,
            rs12972366,
            rs12978472,
            rs4804517,
            rs10409243,
            rs61194703,
            rs74179972,
            rs167479,
            rs7246865,
            rs113230003,
            rs11880800,
            rs7412,
            rs516246,
            rs189349094,
            rs36037977,
            rs6039216,
            rs1887320,
            rs4911250,
            rs1883711,
            rs6031431,
            rs2208589,
            rs6021247,
            rs127430,
            rs7267618,
            rs1406961,
            rs2478981,
            rs8126001,
            rs2823139,
            rs12627514,
            rs4818833,
            rs174877,
            rs134557,
            rs7890572
        };

        await ctx.stub.putState(patientNumber, Buffer.from(JSON.stringify(patient)));
        console.info('============= END : Create Patient ===========');
    }

    async queryAllPatients(ctx) {
        const startKey = 'PATIENT0';
        const endKey = 'PATIENT2503';
        const allResults = [];
        for await (const {key, value} of ctx.stub.getStateByRange(startKey, endKey)) {
            const strValue = Buffer.from(value).toString('utf8');
            let record;
            try {
                record = JSON.parse(strValue);
            } catch (err) {
                console.log(err);
                record = strValue;
            }
            allResults.push({ Key: key, Record: record });
        }
        console.info(allResults);
        return JSON.stringify(allResults);
    }

    /*async changeCarOwner(ctx, patientNumber, newOwner) {
        console.info('============= START : changeCarOwner ===========');

        const carAsBytes = await ctx.stub.getState(carNumber); // get the car from chaincode state
        if (!carAsBytes || carAsBytes.length === 0) {
            throw new Error(`${carNumber} does not exist`);
        }
        const car = JSON.parse(carAsBytes.toString());
        car.owner = newOwner;

        await ctx.stub.putState(carNumber, Buffer.from(JSON.stringify(car)));
        console.info('============= END : changeCarOwner ===========');
    }*/

}

module.exports = CardioGene;
